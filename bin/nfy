#!/usr/bin/env node

var nfy = require('../index');
var _cli = require('commander');

var nullOnUndefined = function (arg) {
    if (arg === undefined) return null;
    else return arg;
};

_cli
    .version('0.0.3')
    .description('convert AMD modules into node.js compatible modules.')
    .usage('[options] <file ...>')
    .option(
        '-o,--output <folder>',
        'Output folder. If omitted it will output to stdout.',
        nullOnUndefined
    )
    .option(
        '--src-prefix <prefix>',
        'If a file specified for compilation starts with <prefix>, remove the prefix for\n'
            +'the purpose of deciding the names of output files.',
        nullOnUndefined
    )
    .option('--verbose', 'Verbose output. Will log each processed file.')
    .parse(process.argv);

if (_cli.args.length) {
    var files = _cli.args;
    nfy.batchConvert(files, _cli.srcPrefix, _cli.output, function (err, results) {
        if (err) throw err;
        if (! _cli.output) {
            results = results.map(function (r) {
                return r.result;
            });
            console.log(results.join('\n'));
        } else if (_cli.verbose) {
            results = results.map(function (r) {
                return ' - ' + r.outputPath;
            });
            console.log('Converted modules:');
            console.log(results.join('\n'));
        }
    });
} else {
    var buf = '';
    process.stdin.on('data', function (chunk) {
        buf += chunk;
    });

    process.stdin.on('end', function () {
        var result = nfy.parse(buf);
        if (_cli.output) {
            require('fs').writeFileSync(_cli.output, result);
        } else {
            console.log(result);
        }
    });

    process.stdin.resume();
}
